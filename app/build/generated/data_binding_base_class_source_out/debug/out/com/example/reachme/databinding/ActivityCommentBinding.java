// Generated by view binder compiler. Do not edit!
package com.example.reachme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.reachme.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCommentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView comment;

  @NonNull
  public final EditText commentET;

  @NonNull
  public final ImageView commentPostBtn;

  @NonNull
  public final RecyclerView commentRV;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView like;

  @NonNull
  public final TextView name;

  @NonNull
  public final ImageView postImage;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView share;

  @NonNull
  public final Toolbar toolbar3;

  @NonNull
  public final View view12;

  @NonNull
  public final View view13;

  private ActivityCommentBinding(@NonNull ConstraintLayout rootView, @NonNull TextView comment,
      @NonNull EditText commentET, @NonNull ImageView commentPostBtn,
      @NonNull RecyclerView commentRV, @NonNull TextView description, @NonNull TextView like,
      @NonNull TextView name, @NonNull ImageView postImage, @NonNull CircleImageView profileImage,
      @NonNull TextView share, @NonNull Toolbar toolbar3, @NonNull View view12,
      @NonNull View view13) {
    this.rootView = rootView;
    this.comment = comment;
    this.commentET = commentET;
    this.commentPostBtn = commentPostBtn;
    this.commentRV = commentRV;
    this.description = description;
    this.like = like;
    this.name = name;
    this.postImage = postImage;
    this.profileImage = profileImage;
    this.share = share;
    this.toolbar3 = toolbar3;
    this.view12 = view12;
    this.view13 = view13;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCommentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCommentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_comment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCommentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment;
      TextView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.commentET;
      EditText commentET = ViewBindings.findChildViewById(rootView, id);
      if (commentET == null) {
        break missingId;
      }

      id = R.id.commentPostBtn;
      ImageView commentPostBtn = ViewBindings.findChildViewById(rootView, id);
      if (commentPostBtn == null) {
        break missingId;
      }

      id = R.id.commentRV;
      RecyclerView commentRV = ViewBindings.findChildViewById(rootView, id);
      if (commentRV == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.like;
      TextView like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.postImage;
      ImageView postImage = ViewBindings.findChildViewById(rootView, id);
      if (postImage == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.share;
      TextView share = ViewBindings.findChildViewById(rootView, id);
      if (share == null) {
        break missingId;
      }

      id = R.id.toolbar3;
      Toolbar toolbar3 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar3 == null) {
        break missingId;
      }

      id = R.id.view12;
      View view12 = ViewBindings.findChildViewById(rootView, id);
      if (view12 == null) {
        break missingId;
      }

      id = R.id.view13;
      View view13 = ViewBindings.findChildViewById(rootView, id);
      if (view13 == null) {
        break missingId;
      }

      return new ActivityCommentBinding((ConstraintLayout) rootView, comment, commentET,
          commentPostBtn, commentRV, description, like, name, postImage, profileImage, share,
          toolbar3, view12, view13);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
